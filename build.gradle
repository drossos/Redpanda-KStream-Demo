plugins {
	id 'org.springframework.boot' version '2.3.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.0.RELEASE'
	id 'com.github.davidmc24.gradle.plugin.avro' version '1.2.0'
	id 'com.github.imflog.kafka-schema-registry-gradle-plugin' version '0.9.0'
	id 'java'
}

group = 'import com.demo.redpanda'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven { url 'https://packages.confluent.io/maven' }
	maven { url 'https://plugins.gradle.org/' }
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
	gradlePluginPortal()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.confluent:kafka-avro-serializer:6.0.0'
	implementation 'io.confluent:kafka-streams-avro-serde:6.0.0'
	implementation 'org.apache.avro:avro:1.9.2'
	implementation 'org.apache.kafka:kafka-clients:2.6.0'
	implementation 'org.apache.kafka:kafka-streams:2.6.0'
	implementation 'org.projectlombok:lombok'
	implementation 'org.springframework.kafka:spring-kafka:2.6.0'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

downloadSchemasTask {
	schemaRegistry {
		url = System.getenv('SCHEMA_REGISTRY')
		download {
			subject ('input-value', 'src/main/avro')
			subject ('output-value', 'src/main/avro')
		}
	}
}

registerSchemasTask {
	schemaRegistry {
		url = System.getenv('SCHEMA_REGISTRY')
		register {
			subject ('input', 'src/main/avro/input.avsc')
			subject ('output', 'src/main/avro/output.avsc')
		}
	}
}

test {
	useJUnitPlatform()
}
